#!/usr/bin/python3

import argparse
import sqlite3
import sys
import time

from utils import *

parser = argparse.ArgumentParser(description="Update git repos")

parser.parse_args()

conn = sqlite3.connect(git_repo_db_path)
conn.execute("create table if not exists 'local-repo' (path text unique)")
conn.commit()

git_repo_paths = classify_repos(conn)

conn.close()

max_length = max([len(path) for path in git_repo_paths])
split_line = get_split_line()


def show_git_repo(path: str) -> None:
    print(split_line)
    print("Git repo : " + path + " from ", end="")
    sys.stdout.flush()
    run_command_s("git -C " + path +
                  " remote -v | grep fetch | awk '{print $2}'")
    if run_command_s("git -C " + path + " pull"):
        print("\rAborted.")
        try:
            time.sleep(2)
        except KeyboardInterrupt:
            print("\rAborted for all.")
            exit(1)


for path in git_repo_paths:
    show_git_repo(path)
