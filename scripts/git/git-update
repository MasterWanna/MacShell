#!/usr/bin/python3

from argparse import ArgumentParser
import sqlite3
import time

from utils import *


def show_git_repo(path: str) -> None:
    print(split_line)
    print("Git repo : {} from ".format(path), end="", flush=True)
    run_command_s("git -C {} remote -v | grep fetch | awk '{{print $2}}'".format(path))
    if run_command_s("git -C {} pull".format(path)):
        print("\rAborted.")
        try:
            time.sleep(2)
        except KeyboardInterrupt:
            print("\rAborted for all.")
            exit(1)


if __name__ == "__main__":
    parser = ArgumentParser(description="Update git repos")

    parser.parse_args()

    conn = sqlite3.connect(git_repo_db_path)
    conn.execute("create table if not exists '{}' (path text unique)".format(
        git_repo_table_name))
    conn.commit()

    git_repo_paths = classify_repos(conn)

    conn.close()

    max_length = max([len(path) for path in git_repo_paths])
    split_line = get_split_line()

    for path in git_repo_paths:
        show_git_repo(path)
