#!/usr/bin/python3

# if you want to use sudo without password, run :
#    sudo ln -sf /usr/local/bin/ssudo /usr/local/bin/sudo
# requires password first time and no need next time

import getpass
import random
import sys

from utils import *


def encode_passwd(passwd: str) -> None:
    prime_numbers = []
    for i in range(2, 256):
        for j in prime_numbers:
            if i % j == 0:
                break
        else:
            prime_numbers.append(i)

    del prime_numbers[0]

    encoder = prime_numbers[random.randrange(0, len(prime_numbers))]
    decoder = 0

    while True:
        decoder += 1
        if decoder * encoder % 256 == 1:
            break

    pos = random.randint(0, len(passwd))

    with open("{}/.config/passwd".format(os.getenv("HOME")), "w") as f:
        f.write("{:02x} ".format(pos))

        bytearr = bytes(passwd, "utf-8")

        for i in range(pos):
            f.write("{:02x} ".format(bytearr[i] * encoder % 256))

        f.write("{:02x} ".format(decoder))

        for i in range(pos, len(passwd)):
            f.write("{:02x} ".format(bytearr[i] * encoder % 256))

        f.write(os.linesep)


def decode_passwd() -> Union[str, None]:
    passwd_file = "{}/.config/passwd".format(os.getenv("HOME"))

    if not os.path.exists(passwd_file):
        return None

    with open("{}/.config/passwd".format(os.getenv("HOME")), "r") as f:
        passwd_arr = f.readline().strip()

    if len(passwd_arr) == 0:
        return None

    passwd_arr = passwd_arr.split(" ")

    pos = int(passwd_arr[0], 16) + 1
    decoder = int(passwd_arr[pos], 16)

    passwd = ""

    for i in range(1, pos):
        passwd += chr(int(passwd_arr[i], 16) * decoder % 256)

    for i in range(pos + 1, len(passwd_arr)):
        passwd += chr(int(passwd_arr[i], 16) * decoder % 256)

    return passwd


def check_passwd(pwd: str) -> bool:
    return os.system("printf {} | /usr/bin/sudo -S true &> /dev/null".format(pwd)) == 0


if __name__ == "__main__":
    if len(sys.argv) > 1 and (sys.argv[1] == "-r" or sys.argv[1] == "--remove"):
        os.remove(passwd_path)
        print("Password removed")
        exit(0)

    if not check_passwd(decode_passwd()):
        while True:
            try:
                passwd = getpass.getpass("Password: ")
                print(check_passwd(passwd))
            except EOFError:
                print()
                print("Empty password!")
                exit(1)

            if check_passwd(passwd):
                print("Password correct!")
                encode_passwd(passwd)
                print("Run again to use the password!")
                exit(0)

            print("Wrong password!")

    sys.argv[0] = "/usr/bin/sudo"
    run_command_s(to_string(sys.argv, " "))
