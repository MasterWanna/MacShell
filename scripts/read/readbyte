#!/usr/bin/python3

from io import IOBase

from utils import *


def read_file_to_byte(inputstream: IOBase) -> None:
    global byte
    
    for byte in inputstream.read():
        if not no_linesep and byte == line_sep:
            print()
        else:
            print(format_int_base(byte, base, max_len), end=" ")


if __name__ == "__main__":
    parser = ArgumentParser(description="Read Byte Code from File")

    parser.add_argument("-b", "--base", type=int, default=16)
    parser.add_argument("-i", "--ignore-linesep", action="store_true")
    parser.add_argument("files", type=str, nargs="*", help="file to read")

    args = parser.parse_args()

    base: int = args.base
    no_linesep: bool = args.ignore_linesep
    files: List[str] = args.files

    max_len = byte_max_len(base)

    byte = line_sep

    if len(files) == 0:
        read_file_to_byte(sys.stdin.buffer)
    else:
        for path in files:
            with open(path, "r") as f:
                read_file_to_byte(f)

    if no_linesep or byte != line_sep:
        print()
